@model PortalBahiaGas.Models.Entidade.Ocorrencia
<script type="text/javascript">
    $(document).ready(function () {
        ExibirCampos();
    });

    $("#Origem").change(function () {
        ExibirCampos();
    });

    function ExibirCampos() {
        var origem = $("#Origem option:selected").val();
        switch (origem) {
            case '1':
                ExibirAreas('operacao');
                break;
            case '2':
                ExibirAreas('medicao');
                break;
            case '3':
                ExibirAreas('programacao');
                break;
            case '4':
                ExibirAreas('sac');
                break;
            default:
                ExibirAreas('');
                break;
        }
    }

    function ExibirAreas(classe) {
        $('.opcional').each(function () {
            if ($(this).hasClass(classe)) {
                $(this).removeClass('invisivel');
            } else {
                $(this).addClass('invisivel');
                $(this).find('input').each(function () {
                    $(this).val("");
                });
                $(this).find("select").each(function () {
                    $(this).find('option').each(function () {
                        if ($(this).val() == "") $(this).prop("selected", true);
                    });
                });
            }
        });
    }

    $("#Chamado").focusout(function () {
        var chamado = $("#Chamado").val();
        if (chamado.length >= 6) {
            $.ajax({
                url: "/../RegistroTurno/ObterChamado",
                data: { Chamado: chamado },
                type: 'post'
            }).done(function (data) {
                if (!data.Erro) {
                    var descricao = '';
                    if (data.Objeto.Endereco != null) {
                        descricao += 'Endereço: ' + data.Objeto.Endereco + "\n";
                    }
                    if (data.Objeto.Observacao != null) {
                        descricao += 'Observação: ' + data.Objeto.Observacao + "\n";
                    }
                    $("#Descricao").val(descricao);

                    if (data.Objeto.CodCliente != null) {
                        $.ajax({
                            url: "/../Cliente/ObterPorIdProtheus",
                            data: { Id: data.Objeto.CodCliente },
                            type: 'post'
                        }).done(function (result) {
                            if (!result.Erro) {
                                if (result.Objeto != null) {
                                    $("#Cliente_Id").val(result.Objeto.Id);
                                }
                            }
                        });
                    }
                }
            });
        }
    });
</script>
<style>
    .form-alinhado {
        display: block !important;
    }
</style>
<div id="OcorrenciaModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Ocorrência</h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <form class="form-inline" role="form" id="formOcorrencia">
                        @Html.Hidden("pagina", "ocorrencia")
                        @Html.Hidden("IdRegistroTurno", Model.RegistroTurno.Id)
                        @Html.HiddenFor(x => x.Id)
                        <div class="row-formulario">
                            <div class="form-group hidden">
                                @Html.LabelForModel("Código:")
                                @Html.TextBoxFor(x => x.Id, new { @class = "input-sm input-pequeno form-control form-alinhado", disabled = true })
                            </div>
                            <div class="form-group">
                                @Html.Label("Data:")
                                @Html.TextBoxFor(x => x.RegistroTurno.Data, "{0:dd/MM/yyyy}", new { @class = "form-control form-alinhado", disabled = true, style = "width:98px;" })
                            </div>
                            <div class="form-group">
                                @Html.Label("Turno:")
                                @Html.DropDownListFor(x => x.RegistroTurno.Turno, PortalBahiaGas.Models.Entidade.Enuns.ETurno.De7as15.ToSelectList(), "Selecione", new { @class = "form-control form-alinhado", disabled = "disabled" })
                            </div>
                            <div class="form-group">
                                @Html.LabelForModel("Origem:")
                                @Html.EnumDropDownListFor(x => x.Origem, "Selecione", new { @class = "form-control form-alinhado", style = "width: 180px;" })
                            </div>
                        </div>
                        <div class="row-formulario">
                            <div>
                                <div class="form-group opcional sac invisivel">
                                    @Html.LabelForModel("Chamado:", new { @class = "sac opcional invisivel" })
                                    @Html.TextBoxFor(x => x.Chamado, new { @class = "input-sm input-pequeno form-control opcional form-alinhado" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelForModel("Tipo:")
                                    @Html.DropDownListFor(x => x.Tipo, PortalBahiaGas.Models.Entidade.Enuns.ETipoOcorrencia.BaixaPressão.ToSelectList(),"Selecione" ,new { @class = "form-control form-alinhado", style = "width: 180px;" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelForModel("Operador Bahiagás:")
                                    @Html.TextBoxFor(x => x.Atendente, new { @class = "form-control form-alinhado", style = "width: 300px;" })
                                </div>
                            </div>
                            <fieldset style="display:inline-block; border: 1px solid #ccc; padding: 5px;">
                                <legend style="border:none; font-size:14px;font-weight:bold; width:auto;">Horários</legend>
                                <div class="form-group">
                                    @Html.LabelForModel("Início:")
                                    @Html.TextBox("Inicio", Model.Inicio, "{0:HH:mm}", new { @class = "input-sm form-control hora form-alinhado", style = "width: 115px;" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelForModel("Atendimento:")
                                    @Html.TextBox("Atendimento", Model.Atendimento, "{0:HH:mm}", new { @class = "input-sm form-control horaVazia form-alinhado", style = "width: 115px;" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelForModel("Conclusão:")
                                    @Html.TextBox("Conclusao", Model.Conclusao, "{0:HH:mm}", new { @class = "input-sm form-control horaVazia form-alinhado", style = "width: 115px;" })
                                </div>
                            </fieldset>
                        </div>
                        <div class="row-formulario">
                            <div class="form-group">
                                @Html.LabelForModel("Região:")
                                @Html.DropDownListFor(x => x.Regiao.Id, (SelectList)ViewData["Regioes"], "Selecione", new { @class = "form-control form-alinhado", style = "width: 150px;" })
                            </div>
                            <div class="form-group">
                                @Html.LabelForModel("Cliente:")
                                @Html.DropDownListFor(x => x.Cliente.Id, (SelectList)ViewData["Clientes"], "Selecione", new { @class = "form-control form-alinhado", style = "width: 150px;" })
                            </div>
                            <div class="form-group">
                                @Html.LabelForModel("Ponto de entrega:")
                                @Html.DropDownListFor(x => x.PontoEntrega.Id, (SelectList)ViewData["PontosEntrega"], "Selecione", new { @class = "form-control form-alinhado", style = "width: 180px;" })
                            </div>                        </div>
                        <div class="operacao opcional invisivel">
                            <div class="row-formulario" style="border-top: 1px solid #ccc;padding-top:5px;width: 100%;">
                                <div class="form-group">
                                    @Html.LabelForModel("Contato:")
                                    @Html.TextBoxFor(x => x.NomeContato, new { @class = "form-control form-alinhado" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelForModel("Telefone:")
                                    @Html.TextBoxFor(x => x.Telefone, new { @class = "form-control input-sm telefone form-alinhado" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelForModel("Pressão:")
                                    @Html.TextBoxFor(x => x.Pressao, "{0:n2}", new { @class = "form-control input-sm input-pequeno decimal form-alinhado" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelForModel("Vazão:")
                                    @Html.TextBoxFor(x => x.Vazao, "{0:0.000.000}", new { @class = "form-control vazao form-alinhado", style = "width: 180px;" })
                                </div>
                            </div>
                        </div>
                        <div class="programacao opcional invisivel">
                            <div class="form-group row-formulario" style="border-top: 1px solid #ccc;padding-top:5px;width: 100%;">
                                <div class="form-group">
                                    @Html.LabelForModel("Modalidade:")
                                    @Html.DropDownListFor(x => x.Modalidade, PortalBahiaGas.Models.Entidade.Enuns.EModalidade.FirmeInfléxivel.ToSelectList(), "Selecione", new { @class = "form-control form-alinhado" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelForModel("Protocolo:")
                                    @Html.TextBoxFor(x => x.Protocolo, new { @class = "input-sm form-control form-alinhado" })
                                </div>
                            </div>
                        </div>
                        <div class="medicao opcional invisivel">
                            <div class="form-group row-formulario" style="border-top: 1px solid #ccc;padding-top:5px; width: 100%;">
                                <div class="form-group">
                                    @Html.LabelForModel("Tipo:")
                                    @Html.DropDownListFor(x => x.TipoMedicao, PortalBahiaGas.Models.Entidade.Enuns.ETipoMedicao.Calibração.ToSelectList(), "Selecione", new { @class = "form-control form-alinhado", style = "width: 180px;" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelForModel("Operador:")
                                    @Html.TextBoxFor(x => x.Operador, new { @class = "form-control form-alinhado", style = "width: 250px;" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row-formulario">
                            @Html.LabelForModel("Descrição:")
                            @Html.TextAreaFor(x => x.Descricao, new { @class = "form-control", rows = "5", style = "width: 100%;" })
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="" onclick="SalvarOcorrencia('formOcorrencia');">Salvar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/Scripts/mascaras.js")