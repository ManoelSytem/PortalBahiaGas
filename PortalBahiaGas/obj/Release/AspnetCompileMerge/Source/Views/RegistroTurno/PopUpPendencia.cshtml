@model PortalBahiaGas.Models.Entidade.Pendencia
<script src="~/Scripts/bootstrap-datetimepicker.js"></script>
<script type="text/javascript">
    $("#Inicio").focusout(function () {
        if ($("#Origem option:selected").val() == 3) {
            $("#Atendimento").val($(this).val());
            $("#Conclusao").val($(this).val());
        }
    });

    function PopularSelect() {
        if ($("input[name='SelectCliente']").val().length >= 3) {
            $.ajax({
                url: "/../Cliente/ObterPorNomeClienteDoProtheus",
                data: { Nome: $("input[name='SelectCliente']").val() },
                type: 'post'
            }).done(function (result) {
                if (!result.Erro) {
                    if (result.Objeto != null) {
                        $('#SelectIdCliente option').remove();
                        $("#SelectIdCliente").append("<option value=''>Selecione</option>");
                        for (var i = 0; i < result.Objeto.length; i++) {
                            $("#SelectIdCliente").append("<option value='" + result.Objeto[i].IdProtheus + "'>" + result.Objeto[i].Nome + "</option>");
                        }
                    }
                    if (result.Objeto.length > 0) {
                        $("#divComboSelect").show();
                        $("#divComboText").hide();
                    }
                }
            });
        } else {
            alert("O tamanho mínimo para pesquisa é de 3 caracteres.");
        }
    }

    function PopularSelectInfraestrutura() {
        if ($("input[name='SelectInfraestrutura']").val().length >= 3) {
            $.ajax({
                url: "/../Infraestrutura/ObterPorNomeInfraestruturaDoProtheus",
                data: { Nome: $("input[name='SelectInfraestrutura']").val() },
                type: 'post'
            }).done(function (result) {
                if (!result.Erro) {
                    if (result.Objeto != null) {
                        $('#SelectIdInfraestrutura option').remove();
                        $("#SelectIdInfraestrutura").append("<option value=''>Selecione</option>");
                        for (var i = 0; i < result.Objeto.length; i++) {
                            $("#SelectIdInfraestrutura").append("<option value='" + result.Objeto[i].IdProtheus + "'>" + result.Objeto[i].Nome + "</option>");
                        }
                    }
                    if (result.Objeto.length > 0) {
                        $("#divComboSelectInfraestrutura").show();
                        $("#divComboTextInfraestrutura").hide();
                    }
                }
            });
        } else {
            alert("O tamanho mínimo para pesquisa é de 3 caracteres.");
        }
    }

    $("#Local").change(function () {
        if ($('#Local option:selected').val() == 1) {
            $("#divInfraestrutura").hide();
            $("#divCliente").show();
        } else if ($('#Local option:selected').val() == 2) {
            $("#divInfraestrutura").show();
            $("#divCliente").hide();
        } else {
            $("#divInfraestrutura").hide();
            $("#divCliente").hide();
        }
    });

    $('#SelectCliente').change(function () { $('#SelectIdCliente option').remove(); });
    $('#SelectIdCliente').change(function () {
        $("#divComboSelect").hide();
        $("#divComboText").show();
        $("input[name='SelectCliente']").val($('#SelectIdCliente option:selected').text());
    });

    $(document).ready(function () {
        $('.date').datetimepicker({
            todayBtn: 1,
            autoclose: 1,
            todayHighlight: 1,
            startView: 2,
            minView: 2,
            forceParse: 0,
            format: 'dd/mm/yyyy hh:ii',
            showClear: true
        });

        @{
            PortalBahiaGas.Models.Entidade.Usuario Usuario = (PortalBahiaGas.Models.Entidade.Usuario)Session["UsuarioLogado"];
            bool lEdita = !(PortalBahiaGas.Util.Utilitario.VerificarLimiteEdicaoTurno(Model.RegistroTurno.Turno, Model.RegistroTurno.Data, Usuario) || (Model.RegistroTurno.UsuarioCriacao == Usuario.Login && DateTime.Now < Model.RegistroTurno.DataCriacao.Value.AddDays(2)));
        }

        if ($("#formPendencia").find("#Id").val() != "0" && '@lEdita'.toUpperCase() == 'TRUE') {
            $("#formPendencia input").attr("readonly", "readonly");
            $("#formPendencia select").attr("readonly", "readonly");
            $("#Descricao").attr("readonly", "readonly");
            $("#Atendimento").removeAttr("readonly");
            $("#Conclusao").removeAttr("readonly");
        }
        if ($('#Local option:selected').val() == 1) {
            $("#divInfraestrutura").hide();
            $("#divOutro").hide();
            $("#divCliente").show();
        } else if ($('#Local option:selected').val() == 2) {
            $("#divInfraestrutura").show();
            $("#divCliente").hide();
            $("#divOutro").hide();
        } else if ($('#Local option:selected').val() == 3) {
            $("#divInfraestrutura").hide();
            $("#divCliente").hide();
            $("#divOutro").show();
        } else {
            $("#divOutro").hide();
            $("#divInfraestrutura").hide();
            $("#divCliente").hide();
        }
    });


    function PopularSelect() {
        if ($("input[name='SelectCliente']").val().length >= 3) {
            $.ajax({
                url: "/../Cliente/ObterPorNomeClienteDoProtheus",
                data: { Nome: $("input[name='SelectCliente']").val() },
                type: 'post'
            }).done(function (result) {
                if (!result.Erro) {
                    if (result.Objeto != null) {
                        $('#SelectIdCliente option').remove();
                        $("#SelectIdCliente").append("<option value=''>Selecione</option>");
                        for (var i = 0; i < result.Objeto.length; i++) {
                            $("#SelectIdCliente").append("<option value='" + result.Objeto[i].IdProtheus + "'>" + result.Objeto[i].Nome + "</option>");
                        }
                    }
                    if (result.Objeto.length > 0) {
                        $("#divComboSelect").show();
                        $("#divComboText").hide();
                    }
                }
            });
        } else {
            alert("O tamanho mínimo para pesquisa é de 3 caracteres.");
        }
    }

    function PopularSelectInfraestrutura() {
        if ($("input[name='SelectInfraestrutura']").val().length >= 3) {
            $.ajax({
                url: "/../Infraestrutura/ObterPorNomeInfraestruturaDoProtheus",
                data: { Nome: $("input[name='SelectInfraestrutura']").val() },
                type: 'post'
            }).done(function (result) {
                if (!result.Erro) {
                    if (result.Objeto != null) {
                        $('#SelectIdInfraestrutura option').remove();
                        $("#SelectIdInfraestrutura").append("<option value=''>Selecione</option>");
                        for (var i = 0; i < result.Objeto.length; i++) {
                            $("#SelectIdInfraestrutura").append("<option value='" + result.Objeto[i].IdProtheus + "'>" + result.Objeto[i].Nome + "</option>");
                        }
                    }
                    if (result.Objeto.length > 0) {
                        $("#divComboSelectInfraestrutura").show();
                        $("#divComboTextInfraestrutura").hide();
                    }
                }
            });
        } else {
            alert("O tamanho mínimo para pesquisa é de 3 caracteres.");
        }
    }

    $('#SelectCliente').change(function () { $('#SelectIdCliente option').remove(); });
    $('#SelectIdCliente').change(function () {
        $("#divComboSelect").hide();
        $("#divComboText").show();
        $("input[name='SelectCliente']").val($('#SelectIdCliente option:selected').text());
    });

    $('#SelectInfraestrutura').change(function () { $('#SelectIdInfraestrutura option').remove(); });
    $('#SelectIdInfraestrutura').change(function () {
        $("#divComboSelectInfraestrutura").hide();
        $("#divComboTextInfraestrutura").show();
        $("input[name='SelectInfraestrutura']").val($('#SelectIdInfraestrutura option:selected').text());
    });

    $("#Local").change(function () {
        if ($('#Local option:selected').val() == 1) {
            $("#divInfraestrutura").hide();
            $("#divOutro").hide();
            $("#divCliente").show();
        } else if ($('#Local option:selected').val() == 2) {
            $("#divInfraestrutura").show();
            $("#divCliente").hide();
            $("#divOutro").hide();
        } else if ($('#Local option:selected').val() == 3) {
            $("#divInfraestrutura").hide();
            $("#divCliente").hide();
            $("#divOutro").show();
        } else {
            $("#divOutro").hide();
            $("#divInfraestrutura").hide();
            $("#divCliente").hide();
        }
    });
</script>
<style>
    .form-alinhado {
        display: block !important;
    }
</style>
<div id="PendenciaModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Registro operacional</h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <form class="form-inline" role="form" id="formPendencia">
                        @Html.Hidden("pagina", "pendencia")
                        @Html.Hidden("IdRegistroTurno", Model.RegistroTurno.Id)
                        @Html.HiddenFor(x => x.Id)
                        <div class="row-formulario">
                            <div class="form-group hidden">
                                @Html.LabelForModel("Código:")
                                @Html.TextBoxFor(x => x.Id, new { @class = "input-sm input-pequeno form-control form-alinhado", disabled = true })
                            </div>
                            <div class="form-group">
                                @Html.Label("Data:")
                                @Html.TextBoxFor(x => x.RegistroTurno.Data, "{0:dd/MM/yyyy}", new { @class = "form-control form-alinhado", disabled = true, style = "width:98px;" })
                            </div>
                            <div class="form-group">
                                @Html.Label("Turno:")
                                @Html.DropDownListFor(x => x.RegistroTurno.Turno, PortalBahiaGas.Models.Entidade.Enuns.ETurno.De7as15.ToSelectList(), "Selecione", new { @class = "form-control form-alinhado", disabled = "disabled" })
                            </div>
                            <div class="form-group">
                                @Html.LabelForModel("Origem:")
                                @Html.EnumDropDownListFor(x => x.Origem, "Selecione", new { @class = "form-control form-alinhado", style = "width: 141px;" })
                            </div>
                            <div class="form-group">
                                @Html.LabelForModel("Local:")
                                @Html.EnumDropDownListFor(x => x.Local, "Selecione", new { @class = "form-control form-alinhado", style = "width: 141px;" })
                            </div>
                        </div>
                        <div class="row-formulario">
                            <div class="form-group">
                                @Html.LabelForModel("Atendente:")
                                @Html.TextBoxFor(x => x.Atendente, new { @class = "form-control form-alinhado", style = "width: 384px;" })
                            </div>
                            <div class="form-group">
                                @Html.LabelForModel("Código SS:")
                                @Html.TextBoxFor(x => x.CodigoSST, new { @class = "form-control form-alinhado", @style = "width: 150px;" })
                            </div>
                        </div>
                        <div class="row-formulario">
                            <fieldset style="display:inline-block; border: 1px solid #ccc; padding: 5px;">
                                <legend style="border:none; font-size:14px;font-weight:bold; width:auto;">Horários</legend>
                                <div class="form-group">
                                    @Html.LabelForModel("Hora do registro:")<br />
                                    <div class="input-group input-append date" id="data">
                                        @Html.TextBox("Inicio", Model.Inicio, "{0:dd/MM/yyyy HH:mm}", new { @class = "input-sm form-control form-alinhado dataHora", style = "width: 140px;" })
                                        <span class="input-group-addon add-on" style="padding: 6px;">
                                            <span class="glyphicon glyphicon-th"></span>
                                        </span>
                                    </div>
                                </div>
                                @*<div class="form-group">
                                        @Html.LabelForModel("Início de atendimento:")<br />
                                        <div class="input-group input-append date" id="data">
                                            @Html.TextBox("Atendimento", Model.Atendimento, "{0:dd/MM/yyyy HH:mm}", new { @class = "input-sm form-control form-alinhado dataHora", style = "width: 140px;" })
                                            <span class="input-group-addon add-on" style="padding: 6px;">
                                                <span class="glyphicon glyphicon-th"></span>
                                            </span>
                                        </div>
                                    </div>*@
                                <div class="form-group">
                                    @Html.LabelForModel("Conclusão:")<br />
                                    <div class="input-group input-append date" id="data">
                                        @Html.TextBox("Conclusao", Model.Conclusao, "{0:dd/MM/yyyy HH:mm}", new { @class = "input-sm form-control form-alinhado dataHora", style = "width: 140px;" })
                                        <span class="input-group-addon add-on" style="padding: 6px;">
                                            <span class="glyphicon glyphicon-th"></span>
                                        </span>
                                    </div>
                                </div>
                            </fieldset>
                        </div>
                        <div class="row-formulario">
                            <div class="form-group">
                                @Html.LabelForModel("Região:")
                                @Html.DropDownListFor(x => x.Regiao.Id, (SelectList)ViewData["Regioes"], "Selecione", new { @class = "form-control form-alinhado", style = "width: 150px;" })
                            </div>

                            <div class="form-group">
                                <div style="display:none;" id="divCliente">
                                    @Html.LabelForModel("Cliente:")
                                    <div style="display:flex;">
                                        <div id="divComboSelect" style="display:none;">
                                            <select id="SelectIdCliente" name="SelectIdCliente" class="form-control" data-style="btn-inverse" data-live-search="true" style="width:384px;">
                                                @if (Model.ClienteObj != null)
                                                {
                                                    <option selected="selected" value="@Model.ClienteObj.IdProtheus"></option>
                                                }
                                            </select>
                                        </div>
                                        <div id="divComboText" style="display:block; display:flex;">
                                            @Html.TextBox("SelectCliente", (Model.ClienteObj != null) ? Model.ClienteObj.Nome : "", new { @class = "form-control form-alinhado", style = "width: 339px;" })
                                            <button type="button" class="btn btn-default" onclick="PopularSelect();">
                                                <span class="glyphicon glyphicon-search"></span>
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <div style="display:none;" id="divInfraestrutura">
                                    @Html.LabelForModel("Infraestrutura:")
                                    <div style="display:flex;">
                                        <div id="divComboSelectInfraestrutura" style="display:none;">
                                            <select id="SelectIdInfraestrutura" name="SelectIdInfraestrutura" class="form-control" data-style="btn-inverse" data-live-search="true" style="width:384px;">
                                                @if (Model.InfraestruturaObj != null)
                                                {
                                                    <option selected="selected" value="@Model.InfraestruturaObj.IdProtheus"></option>
                                                }
                                            </select>
                                        </div>
                                        <div id="divComboTextInfraestrutura" style="display:block; display:flex;">
                                            @Html.TextBox("SelectInfraestrutura", (Model.InfraestruturaObj != null) ? Model.InfraestruturaObj.Nome : "", new { @class = "form-control form-alinhado", style = "width: 339px;" })
                                            <button type="button" class="btn btn-default" onclick="PopularSelectInfraestrutura();">
                                                <span class="glyphicon glyphicon-search"></span>
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <div style="display:none;" id="divOutro">
                                    <div class="form-group">
                                        @Html.LabelForModel("Outro:")
                                        @Html.TextBoxFor(x => x.Outro, new { @class = "form-control form-alinhado", style = "width: 383px;" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelForModel("Ponto de entrega Bahiagás:")
                                @Html.DropDownListFor(x => x.PontoEntrega.Id, (SelectList)ViewData["PontosEntrega"], "Selecione", new { @class = "form-control form-alinhado", style = "width: 200px;" })
                            </div>
                        </div>
                        <div class="operacao opcional invisivel">
                            <div class="row-formulario" style="border-top: 1px solid #ccc;padding-top:5px;width: 100%;">
                                <div class="form-group">
                                    @Html.LabelForModel("Contato:")
                                    @Html.TextBoxFor(x => x.NomeContato, new { @class = "form-control form-alinhado" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row-formulario">
                            @Html.LabelForModel("Descrição:")
                            @Html.TextAreaFor(x => x.Descricao, new { @class = "form-control", rows = "5", style = "width: 100%;" })
                        </div>
                        <div class="form-group row-formulario justificativa">
                            @Html.LabelForModel("Justificativa:")
                            @Html.TextAreaFor(x => x.Justificativa, new { @class = "form-control", rows = "5", style = "width: 100%;" })
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="" onclick="SalvarPendencia('formPendencia');">Salvar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/Scripts/mascaras.js")